{"version":3,"sources":["Components/Utils/vec3.js","Components/Utils/ray.js","Components/Hittables/hittable.js","Components/Hittables/hittable_list.js","Components/Hittables/Sphere.js","Components/Canvas.js","Components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["vec3","x","y","z","negative","length_squared","length","Math","sqrt","add","v","subtract","multiply","divide","unit","this","print","console","log","u","dot","cross","equals","point3","color","ray","origin","dir","orig","direction","at","t","hit_record","p","normal","front_face","set_face_normal","r","outward_normal","copy","rec","hittable","hit","t_min","t_max","hittable_list","obj","objects","push","clear","temp_rec","hit_anything","closest_so_far","i","undefined","sphere","cen","oc","center","a","half_b","discriminant","radius","root","temp","Canvas","props","hit_sphere","min","ray_color","b","world","pow","unit_direction","abs","buildImage","color_b","setState","animate","drawImage","clamp","max","canvasDOM","state","style","visibility","image_height","height","image_width","width","aspect_ratio","samples_per_pixel","viewport_width","horizontal","vertical","lower_left_corner","ctx","img","getImageData","pixels","data","numPixels","k","accumulator","Float32Array","passText","document","getElementById","timeTaken","renderMethod","render","setTimeout","bind","start_time","Date","now","j","index","random","temp_color","ind","ind2","floor","putImageData","end_time","innerText","time_taken","toPrecision","requestAnimationFrame","toggleAnimation","getContext","onClick","id","className","Component","MainComponent","windowWidth","window","innerWidth","windowHeight","innerHeight","aspect","aspectRatio","React","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","URL","process","href","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ab557258.chunk.js","sourcesContent":["class vec3{\n    constructor(x , y , z){\n        this.x = x || 0;\n        this.y = y || 0;\n        this.z = z || 0;\n    }\n    negative = ()=>{\n        return new vec3(-this.x, -this.y, -this.z);\n    }\n    length_squared = ()=>{\n        return this.x*this.x + this.y*this.y + this.z*this.z;\n    }\n    length = ()=>{\n        return Math.sqrt(this.length_squared())\n    }\n    add = (v)=>{\n        if(v instanceof vec3) return new vec3(this.x + v.x, this.y + v.y, this.z + v.z);\n        else return new vec3(this.x + v, this.y + v, this.z + v);\n    }\n    subtract = (v)=>{\n        if(v instanceof vec3) return new vec3(this.x - v.x, this.y - v.y, this.z - v.z);\n        else return new vec3(this.x - v, this.y - v, this.z - v);\n    }\n    multiply = (v)=>{\n        if(v instanceof vec3) return new vec3(this.x * v.x, this.y * v.y, this.z * v.z);\n        else return new vec3(this.x * v, this.y * v, this.z * v);\n    }\n    divide = (v)=>{\n        if(v instanceof vec3) return new vec3(this.x / v.x, this.y / v.y, this.z / v.z);\n        else return new vec3(this.x / v, this.y / v, this.z / v);\n    }\n    unit = ()=>{\n        return this.divide(this.length());\n    }\n};\n\nvec3.print = (v)=>{\n    if(v instanceof vec3) console.log(v.x, v.y, v.z);\n}\nvec3.add = (u,v)=>{\n    if(u instanceof vec3) return u.add(v);\n    if(v instanceof vec3) return v.add(u);\n}\nvec3.subtract = (u,v)=>{\n    if(u instanceof vec3) return u.subtract(v);\n    if(v instanceof vec3) return v.negative().add(u);\n}\nvec3.multiply = (u,v)=>{\n    if(u instanceof vec3) return u.multiply(v);\n    if(v instanceof vec3) return v.multiply(u);\n}\nvec3.divide = (u,v)=>{\n    if(u instanceof vec3) return u.divide(v);\n}\nvec3.dot = (u,v)=>{\n    return u.x*v.x + u.y*v.y + u.z*v.z;\n}\nvec3.cross = (u,v)=>{\n    return new vec3(u.y * v.z - u.z * v.y, u.z * v.x - u.x * v.z, u.x * v.y - u.y * v.x);\n}\nvec3.unit = (u)=>{\n    return u.divide(u.length());\n}\n\nvec3.equals=(u,v)=>{\n    if(u instanceof vec3 && v instanceof vec3)\n        return u.x===v.x && u.y===v.y && u.z===v.z;\n    return false;\n}\nclass point3 extends vec3{};\nclass color extends vec3{};\nexport {vec3, point3, color};","import {vec3,point3} from './vec3';\n\nclass ray{\n    constructor(origin, dir){\n        if(origin instanceof vec3 && dir instanceof vec3 ){\n            this.orig = origin;\n            this.dir = dir;\n        }else{\n            this.orig = new point3(0,0,0);\n            this.dir = new vec3(0,0,0);\n        }\n    }\n\n    origin = ()=>this.orig;\n    direction = ()=>this.dir;\n\n    at = (t)=>{\n        return vec3.add(this.orig, vec3.multiply(this.dir, t))\n    }\n}\n\nexport default ray;","import {vec3, point3} from '../Utils/vec3';\nfunction hit_record(){\n    this.p = new point3(0,0,0);\n    this.normal = new vec3(0,0,0);\n    this.t = 0;\n    this.front_face = false;\n    this.set_face_normal = (r, outward_normal)=>{\n        this.front_face = vec3.dot(r.direction(),outward_normal);\n        this.normal = this.front_face?outward_normal:-outward_normal;\n    }\n    this.copy = (rec)=>{\n        this.p = rec.p;\n        this.normal = rec.normal;\n        this.t = rec.t;\n        this.front_face = rec.front_face;\n    }\n}\n\nclass hittable{\n    hit = (ray, t_min, t_max, hit_record)=>{}\n}\n\nexport {hittable, hit_record};\n\n","import {hittable, hit_record} from './hittable';\n\nclass hittable_list extends hittable{\n    objects = [];\n    constructor(obj){\n        super();\n        if(obj!==undefined){\n            this.add(obj);\n        }\n    }\n    add = (obj)=>this.objects.push(obj);\n    length = ()=>(this.objects.length);\n    clear = ()=>{this.objects = []};\n\n    hit = (r, t_min, t_max, rec)=>{\n        let temp_rec = new hit_record();\n        let hit_anything = false;\n        let closest_so_far = t_max;\n        for(let i =0;i<this.length();i++){\n            if(this.objects[i].hit(r, t_min, closest_so_far, temp_rec)){\n                hit_anything=true;\n                closest_so_far = temp_rec.t;\n                rec.copy(temp_rec);\n            }\n        }\n        return hit_anything;\n    }\n}\n\nexport default hittable_list;","import {hittable} from './hittable';\nimport {vec3} from '../Utils/vec3';\n\nclass sphere extends hittable{\n    constructor(cen, r){\n        super();\n        this.center = cen;\n        this.radius = r\n    }\n\n    hit = (r, t_min, t_max, rec)=>{\n        const oc = vec3.subtract(r.origin(),this.center);\n        const a = r.direction().length_squared();\n        const half_b = vec3.dot(oc, r.direction());\n        const c = oc.length_squared() - this.radius*this.radius;\n        const discriminant = half_b*half_b - a*c;\n\n        if(discriminant>0){\n            const root = Math.sqrt(discriminant);\n            let temp = (-half_b-root)/a;\n\n            if(temp < t_max && temp>t_min){\n                rec.t = temp;\n                rec.p = r.at(rec.t);\n                let outward_normal = vec3.unit(rec.p.subtract(this.center));\n                rec.set_face_normal(r, outward_normal);\n                return true;\n            }\n            temp = (-half_b+root)/a;\n            if(temp < t_max && temp>t_min){\n                rec.t = temp;\n                rec.p = r.at(rec.t);\n                let outward_normal = vec3.unit(rec.p.subtract(this.center));\n                rec.set_face_normal(r, outward_normal);\n                return true;\n            } \n        }\n        return false;\n    }\n}\n\n\nexport default sphere;","import React, { Component } from 'react';\nimport {vec3, point3, color} from './Utils/vec3';\nimport ray from './Utils/ray';\nimport {hit_record} from './Hittables/hittable';\nimport hittable_list from './Hittables/hittable_list';\nimport sphere from './Hittables/Sphere';\n\nexport class Canvas extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            canvasDOM:null,\n            ctx:null,\n            animate:false\n        }\n        this.b =0;\n    }\n\n    componentDidMount(){\n        let canvasDOM = document.getElementById('myCanvas');\n        canvasDOM.style.visibility =\"hidden\";\n        canvasDOM.width = this.props.width;\n        canvasDOM.height = this.props.height;\n        let ctx = canvasDOM.getContext('2d');\n        this.setState({\n            canvasDOM:canvasDOM,\n            ctx:ctx\n        });        \n    }\n    hit_sphere = (center, radius, r)=>{\n        if( r instanceof ray && center instanceof vec3){\n            const oc = vec3.subtract(r.origin(),center);\n            const a = r.direction().length_squared();\n            const half_b = vec3.dot(oc, r.direction());\n            const c = oc.length_squared() - radius*radius;\n            const discriminant = half_b*half_b - a*c;\n            if(discriminant<0){\n                return -1.0\n            }\n            return Math.min((-half_b - Math.sqrt(discriminant))/a,(-half_b + Math.sqrt(discriminant))/a)\n        }\n        return -1.0;\n    }\n    ray_color = (r, b, world)=>{\n        let rec = new hit_record();\n        if(world.hit(r,0, Math.pow(10,10)/1.0, rec)){\n            return vec3.multiply(0.5, rec.normal.add(new color(1,1,1)))\n        }\n        const unit_direction = vec3.unit(r.direction());\n        let t = Math.abs(unit_direction.y);\n        return color.multiply(new color(1,1,1),(1.0-t)).add(color.multiply(t, new color(0.5, 0.7, b)));\n\n    }\n    buildImage = (color_b)=>{\n        this.setState({\n            animate:false\n        },()=>{\n            this.b = 0;\n            this.drawImage(color_b);\n        })\n    }\n\n    clamp = (x, min, max)=>{\n        if(x<min) return min;\n        if(x>max) return max;\n        return x;\n    }\n    drawImage = (color_b)=> {\n        // Image Properties\n        let canvasDOM = this.state.canvasDOM;\n        canvasDOM.style.visibility=\"visible\";\n        const image_height = canvasDOM.height;\n        const image_width = canvasDOM.width;\n        const aspect_ratio = image_width/image_height;\n        const samples_per_pixel = this.props.samples_per_pixel;\n\n        // World\n        let world = new hittable_list();\n        world.add(new sphere(new point3(0,0,-1), 0.5));\n        world.add(new sphere(new point3(-1,0,-1), 0.25));\n        world.add(new sphere(new point3(1,0,-1), 0.25));\n        world.add(new sphere(new point3(0,1,-1), 0.25));\n\n        world.add(new sphere(new point3(2,0,1), 0.5));\n        world.add(new sphere(new point3(1,0,1), 0.25));\n        world.add(new sphere(new point3(3,0,1), 0.25));\n        world.add(new sphere(new point3(2,1,1), 0.25));\n\n        world.add(new sphere(new point3(-2,0,2), 0.5));\n        world.add(new sphere(new point3(-1,0,2.4), 0.25));\n        world.add(new sphere(new point3(-3,0,2.9), 0.25));\n        world.add(new sphere(new point3(-2,1,3), 0.25));\n\n        world.add(new sphere(new point3(0,-100.5,-1), 100));\n\n        //Camera Properties\n        const viewport_height = 2.0;\n        const viewport_width = aspect_ratio*viewport_height;\n        const focal_length = 1.0\n\n        const origin = new point3(0,0, color_b);\n        const horizontal = new vec3(viewport_width, 0, 0);\n        const vertical = new vec3(0, viewport_height, 0);\n        const lower_left_corner = origin.subtract(horizontal.divide(2)).subtract(vertical.divide(2)).subtract(new vec3(0,0,focal_length));\n        \n        // Render\n        let ctx = this.state.ctx;\n        let img = ctx.getImageData(0, 0, image_width, image_height);\n        let pixels = img.data;\n        console.log(pixels.length);\n        let numPixels = pixels.length/4;\n        let k = 1;\n        let accumulator = new Float32Array(numPixels*3);\n        let passText = document.getElementById('passValue');\n        let timeTaken = document.getElementById('timeTaken');\n        function render(){\n            if(k<samples_per_pixel) setTimeout(render.bind(this));\n            const start_time = Date.now();\n            for(let j =0;j<image_height;j++){\n                for(let i =0;i<image_width;i++){\n                    const index = ((image_height-j-1) * image_width + i) * 3;\n                    let u = (i+Math.random())/(image_width+1);\n                    let v = (j+Math.random())/(image_height+1);\n                    const r = new ray(origin, lower_left_corner.add(horizontal.multiply(u)).add(vertical.multiply(v)).subtract(origin))\n                    let temp_color = this.ray_color(r, Math.abs(color_b), world);\n                    accumulator[index] += temp_color.x\n                    accumulator[index+1] += temp_color.y\n                    accumulator[index+2] += temp_color.z\n                }\n            }\n            for(let p =0;p<numPixels;p++){\n                const ind = p*4;\n                const ind2 = p*3;\n                pixels[ind] = Math.floor(this.clamp(accumulator[ind2]/k,0,0.9999)*256);\n                pixels[ind+1] = Math.floor(this.clamp(accumulator[ind2+1]/k, 0, 0.9999)*256);\n                pixels[ind+2] = Math.floor(this.clamp(accumulator[ind2+2]/k, 0, 0.9999)*256);\n                pixels[ind+3] = 255;\n            }\n            ctx.putImageData(img, 0,0)\n            const end_time = Date.now();\n            passText.innerText = `Pass: ${k}/${samples_per_pixel}`;\n            const time_taken = ((end_time-start_time)/1000).toPrecision(3);\n            timeTaken.innerText = `Time Taken: ${time_taken}s`\n            k++;\n        }\n        let renderMethod = render.bind(this);\n        setTimeout(()=>renderMethod());\n\n    }\n\n    animate = ()=>{\n        if(this.state.animate){\n            requestAnimationFrame(this.animate);\n            this.drawImage(this.b);\n            this.b += 0.2;\n            if(this.b>20){\n                this.b =0;\n            }\n        }\n    }\n    toggleAnimation = ()=>{\n        this.setState({\n            animate:!this.state.animate\n        },()=>{\n            if(this.state.animate) this.animate()\n        })\n    }\n    render() {\n        return (\n            <> \n                <button onClick={()=>this.buildImage(1.0)} id = \"buildImageBtn\" className=\"btn\">Build Image</button>\n                <button onClick={()=>this.toggleAnimation()} id = \"buildImageBtn2\" className=\"btn\">{this.state.animate?'Stop ':'Start ' }Animation</button>\n                <p id = \"passValue\"></p>\n                <p id = \"timeTaken\"></p>\n                <canvas id = \"myCanvas\"></canvas>\n            </>\n        )\n    }\n}\n\nexport default Canvas;\n\n","import React from 'react';\nimport Canvas from './Canvas';\nclass MainComponent extends React.Component {\n    constructor(props){\n        super(props);\n        const windowWidth = window.innerWidth;\n        const windowHeight = window.innerHeight;\n        const aspect = windowWidth/windowHeight;\n        const scale = 0.5;\n        const width = Math.floor(windowWidth*scale);\n        const height = Math.floor(windowHeight*scale);\n        this.state = {\n            aspectRatio:aspect,\n            width:width,\n            height:height,\n            samples_per_pixel:1\n        }\n    }\n    render(){\n        return (\n            <div className=\"container\">\n                <div className=\"main-content\">\n                    <div className=\"canvas-container\">\n                        <Canvas samples_per_pixel={this.state.samples_per_pixel} width = {this.state.width} height={this.state.height}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default MainComponent;\n","import React from 'react';\nimport './App.css';\nimport MainComponent from './Components/MainComponent';\n\nfunction App() {\n  return (<MainComponent/>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />,document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}